buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath "com.bmuschko:gradle-tomcat-plugin:2.2.3"
  }
}

apply plugin:"war"  
apply plugin: "eclipse"
apply plugin: "com.bmuschko.tomcat"

//指定war包名称
war.baseName = "gradleweb"
//project.webAppDirName = "src/main/webapp"

//定义版本号，相当于maven中的properties
ext {
    tomcatVersion  = '8.0.27'
}

repositories {
    mavenLocal()
    maven {url "http://maven.oschina.net/content/groups/public/"}    
    mavenCentral()
    jcenter()
}


dependencies{  
    // 依赖 core 模块
    compile project(":core")  
    //classpath "com.bmuschko:gradle-tomcat-plugin:2.2.3"  
    compile(
            /**"org.springframework:spring-webmvc:$springVersion",  
            "org.springframework:spring-jdbc:$springVersion",
            "org.apache.taglibs:taglibs-standard-impl:1.2.1"  */
    )  	
    //系统提供的依赖
    providedCompile(  
            "javax.servlet:javax.servlet-api:3.0.1",  
            "javax.servlet.jsp:jsp-api:2.2.1-b03",  
            "javax.servlet.jsp.jstl:javax.servlet.jsp.jstl-api:1.2.1"  
    )
    // def tomcatVersion = '7.0.59'//另一种定义版本号
    //tocat依赖
    tomcat  "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"  
}  
/*将src/main/java编译的class打包成${project.name}-${version}.jar放入到build/libs目录下,配置文件没必要打包*/
task jarWithoutResources(type: Jar) {  
    baseName project.name  
    from("$buildDir/classes/main")  
}  

/*1.将$projectDir/resources下的配置文件(生产上的配置文件)拷贝到WEB-INF/classes目录,不打包是为了方便修改配置*/  
/*2.将sourceSet.main下面编译的文件和资源文件剔除:*/  
//classpath=classpath - files("$buildDir/classes/main")  
//classpath=classpath - files("$buildDir/resources/main")  
/*3.将前一步打包的jar文件放入WEB-INF/lib目录下*/ 
war{  
	//自己把自己打包进去了
    //dependsOn jarWithoutResources  
    from("$projectDir/src/main/resources") {  
        //include "*.properties"  
        //include "*WEB-INF/"  
        include "**/*.*"  
        into("WEB-INF/classes")   
    }  
    classpath=classpath - sourceSets.main.output  
    classpath fileTree(dir:libsDir, include:"${project.name}-${version}.jar")  
}  
task('jarPath')<<{  
    configurations.runtime.resolve().each {  
        print it.toString()+";"  
    }  
    println();  
}

configurations {
    provided
}


sourceSets {
    main{
        resources.srcDirs = ["src/main/java"]    //引入资源文件，打包时才会将配置文件植入war文件
    }
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
}

//注意下面这个配置，新版本gradle如果不使用数组添加的话会导致eclipse频繁报错
eclipse.classpath.plusConfigurations += [configurations.provided]
tasks.withType(JavaCompile) {  
    options.encoding = "UTF-8"  
}
tomcatRun.contextPath = '/gradleweb'
tomcatRunWar.contextPath = '/gradleweb'